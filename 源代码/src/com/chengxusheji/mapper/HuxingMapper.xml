<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace命名空间，为了对sql语句进行隔离，方便管理，mapper开发dao方式，使用namespace有特殊作用  
mapper代理开发时将namespace指定为mapper接口的全限定名  
 -->
<mapper namespace="com.chengxusheji.mapper.HuxingMapper"> 
<!--在mapper.xml文件中配置很多的sql语句，执行每个sql语句时，封装为MappedStatement对象 
mapper.xml以statement为单位管理sql语句  
 -->
	<!-- 添加户型记录 -->
	<insert id="addHuxing" parameterType="huxing">
		insert into t_huxing(huxingName) values 
		(#{huxingName})
	</insert>

	<!-- 按照查询条件分页查询户型记录 -->
	<select id="queryHuxing" resultMap="huxingMap" >
		select t_huxing.* from t_huxing ${where} limit #{startIndex},#{pageSize}
	</select>
	<resultMap id="huxingMap" type="huxing">
        <id property="huxingId" column="huxingId" />
    </resultMap>

    <!-- 按照查询条件查询所有户型记录 -->
	<select id="queryHuxingList" resultMap="huxingMap" >
		select t_huxing.* from t_huxing ${where}
	</select>

    <!-- 按照查询条件的户型记录数 -->
	<select id="queryHuxingCount" resultType="int">
		select count(*) from t_huxing ${where}
	</select>

	<!-- 根据主键查询某个户型记录 -->
	<select id="getHuxing" parameterType="int" resultMap="huxingMap">
		select * from t_huxing where t_huxing.huxingId = #{huxingId}
	</select>

	<!-- 更新户型记录 -->
	<update id="updateHuxing" parameterType="huxing">
		update t_huxing set huxingName=#{huxingName} where huxingId = #{huxingId}
	</update>

	<!-- 删除户型记录 -->
	<delete id="deleteHuxing" parameterType="int">
		delete from t_huxing where huxingId=#{huxingId}
	</delete>

</mapper>
